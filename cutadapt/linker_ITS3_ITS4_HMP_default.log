nohup: ignoring input
> 
> library(dada2)
Loading required package: Rcpp
> cutadapt <- "/home/wangxinyu/miniconda3/envs/fq/bin/cutadapt"
> 
> # define the input folder
> # HMP
> path_in <- "/data/wangxinyu/HMP_ITS/data/PRJNA356769_ITS2/0_raw_merged" 
> 
> # GNHS
> # path_in <- "/data/wangxinyu/HMP_ITS/data/GNHS/raw_merged" 
> 
> # MK-SpikeSeq
> # path_in <- "/data/wangxinyu/HMP_ITS/data/MK-SpikeSeq/raw_merged"
> 
> 
> # define the pattern of fastq file
> pattern_F = ".1.fastq.gz" 
> pattern_R = ".2.fastq.gz"
> 
> fqF_raw <- sort(list.files(path_in, pattern = pattern_F, full.names = TRUE))
> fqR_raw <- sort(list.files(path_in, pattern = pattern_R, full.names = TRUE))
> head(fqF_raw)
[1] "/data/wangxinyu/HMP_ITS/data/PRJNA356769_ITS2/0_raw_merged/PRJNA356769_ITS2_merged.1.fastq.gz"
> head(fqR_raw)
[1] "/data/wangxinyu/HMP_ITS/data/PRJNA356769_ITS2/0_raw_merged/PRJNA356769_ITS2_merged.2.fastq.gz"
> 
> path_filterA <- "/data/wangxinyu/HMP_ITS/cutadapt/linker_ITS3_ITS4_HMP_default"
> if(!dir.exists(path_filterA)) {dir.create(path_filterA)}
> 
> # deine the output folder
> fqF_filterA <- file.path(path_filterA, basename(fqF_raw))
> fqR_filterA <- file.path(path_filterA, basename(fqR_raw))
> 
> # construct the cutadapt flag
> fwd <- "GCATCGATGAAGAACGCAGC" #ITS3
> rev <- "TCCTCCGCTTATTGATATGC" #ITS4
> 
> # fwd <- "CTYGGTCATTTAGAGGAAGTAA" #ITS1F (modified)
> # rev <- "GCTGCGTTCTTCATCGATGC" #ITS2
> 
> fwd_rc <- dada2:::rc(fwd)
> rev_rc <- dada2:::rc(rev)
> 
> # default
> F_flag <- paste0("-a ", '"', fwd, ";min_overlap = ", round((0.9 * nchar(fwd)), 0), ";required",'...', rev_rc, ";min_overlap = ", round((0.9 * nchar(rev_rc)), 0), ";optional", '"') 
> R_flag <- paste0("-A ", '"', rev, ";min_overlap = ", round((0.9 * nchar(rev)), 0), ";required",'...', fwd_rc, ";min_overlap = ", round((0.9 * nchar(fwd_rc)), 0), ";optional", '"') 
> F_flag 
[1] "-a \"GCATCGATGAAGAACGCAGC;min_overlap = 18;required...GCATATCAATAAGCGGAGGA;min_overlap = 18;optional\""
> R_flag 
[1] "-A \"TCCTCCGCTTATTGATATGC;min_overlap = 18;required...GCTGCGTTCTTCATCGATGC;min_overlap = 18;optional\""
> 
> # relax 
> # F_flag <- paste0("-a ", '"', fwd, ";min_overlap = ", round((0.75 * nchar(fwd)), 0), ";e=0.2;required",'...', rev_rc, ";min_overlap = ", round((0.75 * nchar(rev_rc)), 0), ";optional", '"') 
> # R_flag <- paste0("-A ", '"', rev, ";min_overlap = ", round((0.75 * nchar(rev)), 0), ";e=0.2;required",'...', fwd_rc, ";min_overlap = ", round((0.75 * nchar(fwd_rc)), 0), ";optional", '"') 
> # F_flag 
> # R_flag
> 
> # run cutadapt
> for(i in seq_along(fqF_raw)) {
+   system2(cutadapt,
+           args = c(F_flag, R_flag,
+                    "-o", fqF_filterA[i], "-p", fqR_filterA[i],
+                    fqF_raw[i], fqR_raw[i],
+                    "--discard-untrimmed",
+                    "--minimum-length 1",  # drop empty reads
+                    "-j", 100))
+ }
This is cutadapt 5.0 with Python 3.12.10
Command line parameters: -a GCATCGATGAAGAACGCAGC;min_overlap = 18;required...GCATATCAATAAGCGGAGGA;min_overlap = 18;optional -A TCCTCCGCTTATTGATATGC;min_overlap = 18;required...GCTGCGTTCTTCATCGATGC;min_overlap = 18;optional -o /data/wangxinyu/HMP_ITS/cutadapt/linker_ITS3_ITS4_HMP_default/PRJNA356769_ITS2_merged.1.fastq.gz -p /data/wangxinyu/HMP_ITS/cutadapt/linker_ITS3_ITS4_HMP_default/PRJNA356769_ITS2_merged.2.fastq.gz /data/wangxinyu/HMP_ITS/data/PRJNA356769_ITS2/0_raw_merged/PRJNA356769_ITS2_merged.1.fastq.gz /data/wangxinyu/HMP_ITS/data/PRJNA356769_ITS2/0_raw_merged/PRJNA356769_ITS2_merged.2.fastq.gz --discard-untrimmed --minimum-length 1 -j 100
Processing paired-end reads on 100 cores ...

=== Summary ===

Total read pairs processed:         12,383,662
  Read 1 with adapter:                       9 (0.0%)
  Read 2 with adapter:                     541 (0.0%)

== Read fate breakdown ==
Pairs that were too short:                   1 (0.0%)
Pairs discarded as untrimmed:       12,383,661 (100.0%)
Pairs written (passing filters):             0 (0.0%)

Total basepairs processed: 7,297,989,200 bp
  Read 1: 3,648,994,600 bp
  Read 2: 3,648,994,600 bp
Total written (filtered):              0 bp (0.0%)
  Read 1:             0 bp
  Read 2:             0 bp

=== First read: Adapter 1 ===

Sequence: GCATCGATGAAGAACGCAGC...GCATATCAATAAGCGGAGGA; Type: linked; Length: 20+20; 5' trimmed: 9 times; 3' trimmed: 2 times

Minimum overlap: 18+18
No. of allowed errors:
1-9 bp: 0; 10-19 bp: 1; 20 bp: 2

No. of allowed errors:
1-9 bp: 0; 10-19 bp: 1; 20 bp: 2

Overview of removed sequences at 5' end
length	count	expect	max.err	error counts
18	3	0.0	1	3
26	1	0.0	2	0 0 1
32	1	0.0	2	0 1
42	1	0.0	2	0 1
49	1	0.0	2	0 0 1
238	1	0.0	2	0 0 1
243	1	0.0	2	0 0 1



Overview of removed sequences at 3' end
length	count	expect	max.err	error counts
23	1	0.0	2	0 1
213	1	0.0	2	1


=== Second read: Adapter 2 ===

Sequence: TCCTCCGCTTATTGATATGC...GCTGCGTTCTTCATCGATGC; Type: linked; Length: 20+20; 5' trimmed: 541 times; 3' trimmed: 507 times

Minimum overlap: 18+18
No. of allowed errors:
1-9 bp: 0; 10-19 bp: 1; 20 bp: 2

No. of allowed errors:
1-9 bp: 0; 10-19 bp: 1; 20 bp: 2

Overview of removed sequences at 5' end
length	count	expect	max.err	error counts
20	1	0.0	2	1
24	3	0.0	2	2 1
27	1	0.0	2	1
37	1	0.0	2	0 0 1
44	1	0.0	2	0 0 1
45	1	0.0	2	0 0 1
54	1	0.0	2	0 1
64	2	0.0	2	0 1 1
66	88	0.0	2	80 4 4
67	39	0.0	2	28 8 3
68	245	0.0	2	214 26 5
69	154	0.0	2	146 4 4
134	1	0.0	2	0 0 1
135	1	0.0	2	0 1
144	1	0.0	2	0 1
199	1	0.0	2	0 0 1



Overview of removed sequences at 3' end
length	count	expect	max.err	error counts
61	1	0.0	2	1
66	1	0.0	2	0 1
75	1	0.0	2	0 1
129	59	0.0	2	51 8
130	17	0.0	2	15 1 1
133	5	0.0	2	5
139	137	0.0	2	114 18 5
140	1	0.0	2	1
143	100	0.0	2	95 3 2
144	2	0.0	2	0 2
145	112	0.0	2	105 6 1
154	16	0.0	2	15 1
155	2	0.0	2	1 1
156	10	0.0	2	7 1 2
157	5	0.0	2	3 1 1
158	2	0.0	2	0 0 2
161	2	0.0	2	1 1
162	1	0.0	2	1
163	2	0.0	2	0 2
164	2	0.0	2	1 1
165	4	0.0	2	2 2
166	3	0.0	2	1 2
167	2	0.0	2	1 0 1
168	7	0.0	2	4 2 1
169	3	0.0	2	1 1 1
170	1	0.0	2	1
171	3	0.0	2	2 1
172	3	0.0	2	2 1
174	1	0.0	2	1
185	1	0.0	2	1
255	1	0.0	2	0 0 1
> 
> 
75	169	0.0	2	165 3 1
76	59	0.0	2	24 15 20
77	70	0.0	2	57 13
78	302	0.0	2	294 8
79	28	0.0	2	25 2 1
80	169	0.0	2	144 22 3
81	300	0.0	2	292 6 2
82	11	0.0	2	10 1
83	20	0.0	2	14 6
84	125	0.0	2	112 12 1
85	402	0.0	2	353 47 2
86	1091	0.0	2	1064 21 6
87	13	0.0	2	5 8
88	792	0.0	2	744 45 3
89	28	0.0	2	27 1
90	43	0.0	2	39 3 1
91	41	0.0	2	26 15
92	262	0.0	2	252 9 1
93	42	0.0	2	41 1
94	6	0.0	2	5 1
95	44	0.0	2	43 1
96	3	0.0	2	1 2
97	318	0.0	2	311 6 1
98	10	0.0	2	4 6
99	4	0.0	2	2 1 1
100	128	0.0	2	9 117 2
101	75	0.0	2	70 3 2
102	14	0.0	2	7 6 1
103	81	0.0	2	75 4 2
104	4	0.0	2	1 2 1
105	63	0.0	2	5 57 1
106	4	0.0	2	2 2
107	4	0.0	2	3 1
108	143	0.0	2	132 11
109	228	0.0	2	216 11 1
110	64	0.0	2	57 6 1
111	39	0.0	2	33 6
112	226	0.0	2	218 6 2
113	137	0.0	2	19 117 1
114	11	0.0	2	7 2 2
115	19	0.0	2	17 2
116	39	0.0	2	35 3 1
117	16	0.0	2	15 1
118	18	0.0	2	18
119	31	0.0	2	28 1 2
120	19	0.0	2	8 6 5
121	194	0.0	2	178 15 1
122	361	0.0	2	305 55 1
123	28	0.0	2	19 9
124	205	0.0	2	188 14 3
125	124	0.0	2	113 7 4
126	99	0.0	2	67 26 6
127	160	0.0	2	147 12 1
128	2	0.0	2	0 2
129	24	0.0	2	21 2 1
130	41	0.0	2	13 28
131	151	0.0	2	128 18 5
132	46	0.0	2	42 4
133	7	0.0	2	6 1
134	8	0.0	2	6 0 2
135	28	0.0	2	24 3 1
136	21	0.0	2	15 5 1
137	151	0.0	2	61 87 3
138	2	0.0	2	1 1
139	1	0.0	2	1
140	41	0.0	2	18 21 2
141	171	0.0	2	148 21 2
142	51	0.0	2	48 2 1
143	6	0.0	2	4 1 1
144	25	0.0	2	24 0 1
145	20	0.0	2	15 5
146	112	0.0	2	105 6 1
147	198	0.0	2	185 10 3
148	17	0.0	2	14 2 1
149	21	0.0	2	8 13
150	2	0.0	2	1 1
151	22	0.0	2	22
152	1	0.0	2	1
153	3	0.0	2	3
154	3	0.0	2	3
155	1	0.0	2	1
156	21	0.0	2	21
157	2	0.0	2	1 1
158	8	0.0	2	7 1
159	71	0.0	2	69 2
160	1	0.0	2	0 1
161	10	0.0	2	9 1
163	2	0.0	2	1 1
164	7	0.0	2	7
165	6	0.0	2	4 2
166	18	0.0	2	15 2 1
167	3	0.0	2	0 2 1
168	3	0.0	2	3
169	16	0.0	2	12 4
170	30	0.0	2	29 1
171	5	0.0	2	1 4
172	116	0.0	2	111 4 1
173	62	0.0	2	43 16 3
174	1807	0.0	2	1586 181 40
175	50	0.0	2	42 7 1
176	109	0.0	2	101 6 2
177	84	0.0	2	74 9 1
178	1	0.0	2	0 1
179	33	0.0	2	25 6 2
180	139	0.0	2	126 11 2
181	11	0.0	2	10 0 1
182	20	0.0	2	6 14
183	295	0.0	2	272 22 1
184	1	0.0	2	0 1
185	358	0.0	2	314 39 5
186	19	0.0	2	16 2 1
187	8	0.0	2	3 4 1
188	1	0.0	2	0 1
189	16	0.0	2	16
190	18	0.0	2	15 3
191	6	0.0	2	1 3 2
192	39	0.0	2	29 9 1
193	51	0.0	2	49 1 1
194	20	0.0	2	17 3
195	49	0.0	2	38 8 3
196	7	0.0	2	6 1
197	45	0.0	2	37 6 2
198	58	0.0	2	48 7 3
199	12	0.0	2	9 3
200	71	0.0	2	51 18 2
201	38	0.0	2	36 2
202	1	0.0	2	1
203	2	0.0	2	1 1
204	55	0.0	2	42 7 6
205	169	0.0	2	130 30 9
206	1976	0.0	2	1552 315 109
207	6	0.0	2	0 4 2
209	6	0.0	2	1 5
210	71	0.0	2	66 3 2
211	20	0.0	2	5 12 3
212	180	0.0	2	113 53 14
213	4516	0.0	2	3200 968 348
214	795	0.0	2	555 158 82
216	35	0.0	2	8 25 2
217	1111	0.0	2	899 156 56
218	103	0.0	2	13 45 45
219	4856	0.0	2	2991 1358 507
220	56848	0.0	2	39752 12201 4895
221	216	0.0	2	95 100 21
222	4	0.0	2	2 0 2
223	381	0.0	2	184 53 144
224	4929	0.0	2	1244 2526 1159
225	261279	0.0	2	170956 65209 25114
226	382	0.0	2	14 274 94
227	5	0.0	2	0 1 4
228	69	0.0	2	58 10 1
229	147	0.0	2	119 17 11
230	75	0.0	2	33 30 12
231	18	0.0	2	1 11 6
232	1085	0.0	2	455 374 256
233	6132	0.0	2	3069 1985 1078
234	73227	0.0	2	41611 21106 10510
235	229564	0.0	2	111421 74192 43951
236	526	0.0	2	85 197 244
237	90	0.0	2	27 32 31
238	2384	0.0	2	1069 826 489
239	574	0.0	2	269 191 114
240	15	0.0	2	9 3 3
241	40	0.0	2	33 6 1
242	49	0.0	2	33 12 4
243	31	0.0	2	23 6 2
244	1	0.0	2	0 0 1
245	8	0.0	2	4 4
247	5	0.0	2	0 2 3
248	92	0.0	2	9 73 10
249	629	0.0	2	143 236 250
250	2229	0.0	2	610 853 766
251	1652	0.0	2	700 583 369
252	5	0.0	2	0 2 3
253	9	0.0	2	3 2 4
254	8	0.0	2	0 2 6
255	825	0.0	2	156 316 353
256	1	0.0	2	0 0 1
258	7	0.0	2	1 2 4
262	14	0.0	2	2 6 6
263	1	0.0	2	0 0 1
264	85	0.0	2	3 24 58
265	5429	0.0	2	1251 2017 2161
266	5317	0.0	2	1230 1959 2128
267	15	0.0	2	3 6 6
269	47	0.0	2	3 3 41
270	1110	0.0	2	48 368 694
271	85302	0.0	2	20639 31265 33398
272	668	0.0	2	1 184 483
275	13	0.0	2	2 7 4
276	11	0.0	2	1 1 9
277	79	0.0	2	2 25 52
278	3853	0.0	2	627 1309 1917
279	32	0.0	2	0 10 22
280	15	0.0	2	3 5 7
281	2	0.0	2	0 1 1
282	79	0.0	2	11 28 40
283	2	0.0	2	0 0 2
284	4	0.0	2	0 1 3
285	38	0.0	2	5 11 22
286	959	0.0	2	165 342 452
287	1095	0.0	2	121 372 602
288	720	0.0	2	215 255 250
289	384	0.0	2	65 130 189
290	344	0.0	2	20 133 191
291	18681	0.0	2	4530 6879 7272
292	117	0.0	2	7 39 71
293	3	0.0	2	1 0 2
294	14	0.0	2	0 3 11
295	325	0.0	2	40 104 181
296	22	0.0	2	0 2 20
297	74	0.0	2	14 26 34
298	14	0.0	2	0 5 9
299	1	0.0	2	1
300	25	0.0	2	0 2 23



Overview of removed sequences at 3' end
length	count	expect	max.err	error counts
